#! /usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk = require("chalk");
const commander = require("commander");
const compile_graphql_1 = require("./compile-graphql");
exports.compileGraphql = compile_graphql_1.compileGraphql;
commander
    .arguments('<graphqlFileGlob> <outputFile>')
    .action((graphqlFileGlob, outputFile) => __awaiter(this, void 0, void 0, function* () {
    try {
        const options = {
            graphqlFileGlob,
            outputFile
        };
        yield compile_graphql_1.compileGraphql(options);
        console.info(chalk.bold.green('Graphql output files compiled'));
    }
    catch (e) {
        console.error(chalk.bold.red(e));
    }
}))
    .parse(process.argv);
//# sourceMappingURL=index.js.map